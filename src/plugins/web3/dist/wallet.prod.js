"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _web=_interopRequireDefault(require("web3"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var walletAddress,web3=new _web.default(window.ethereum),tokenMDC=require("./abi/token_mdc.json"),crewAbi=require("./abi/crew_abi.json"),rewardpoolAbi=require("./abi/rewardpool_abi.json"),tokenAddress=process.env.VUE_APP_TOKEN_ADDRESS,crewAddress=process.env.VUE_APP_CREW_ADDRESS,rewardpoolAdress=process.env.VUE_APP_REWARD_POOL_ADDRESS,crewContract=new web3.eth.Contract(crewAbi,crewAddress),rewardpoolContract=new web3.eth.Contract(rewardpoolAbi,rewardpoolAdress),chainId=56,Wallet=function(){return{getAccount:function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0!==window.ethereum)return e.prev=1,e.next=4,regeneratorRuntime.awrap(window.ethereum.request({method:"eth_accounts"}).then(function(e){walletAddress=e[0]}));e.next=12;break;case 4:e.next=10;break;case 6:e.prev=6,e.t0=e.catch(1),console.log(e.t0),walletAddress=0;case 10:e.next=14;break;case 12:return alert("Please install metamask."),e.abrupt("return",0);case 14:return e.abrupt("return",walletAddress);case 15:case"end":return e.stop()}},null,null,[[1,6]])},connectWallet:function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0!==window.ethereum)return e.prev=1,e.next=4,regeneratorRuntime.awrap(window.ethereum.request({method:"eth_requestAccounts"}).then(function(e){walletAddress=e[0]}));e.next=13;break;case 4:e.next=10;break;case 6:e.prev=6,e.t0=e.catch(1),console.log(e.t0),walletAddress=0;case 10:return e.abrupt("return",walletAddress);case 13:return alert("Please install metamask."),e.abrupt("return",0);case 15:case"end":return e.stop()}},null,null,[[1,6]])},switchNetwork:function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(window.ethereum.networkVersion!==chainId)return e.prev=1,e.next=4,regeneratorRuntime.awrap(window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:web3.utils.toHex(chainId)}]}));e.next=12;break;case 4:return e.abrupt("return",!0);case 7:if(e.prev=7,e.t0=e.catch(1),4902===e.t0.code)return e.next=12,regeneratorRuntime.awrap(window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainName:"Binance Smart Chain",chainId:web3.utils.toHex(chainId),nativeCurrency:{name:"Binance Smart Chain",decimals:18,symbol:"BNB"},rpcUrls:["https://bsc-dataseed.binance.org/"]}]}));e.next=12;break;case 12:case"end":return e.stop()}},null,null,[[1,7]])},checkBalanceBNB:function(){var r,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.switchNetwork());case 2:return r=new _web.default(_web.default.givenProvider||"ws://some.local-or-remote.node:8546"),e.next=5,regeneratorRuntime.awrap(r.eth.getBalance(walletAddress));case 5:return t=e.sent,e.abrupt("return",web3.utils.fromWei(t,"ether"));case 7:case"end":return e.stop()}},null,this)},checkBalanceMDC:function(){var r,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.switchNetwork());case 2:return r=new web3.eth.Contract(tokenMDC,tokenAddress),e.next=5,regeneratorRuntime.awrap(r.methods.balanceOf(walletAddress).call());case 5:return t=e.sent,e.abrupt("return",web3.utils.fromWei(t,"ether"));case 7:case"end":return e.stop()}},null,this)},getUnclaimedUSD:function(){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(rewardpoolContract.methods.getUnclaimedUSD(walletAddress).call().then(function(r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:t=r;case 1:case"end":return e.stop()}})}).catch(function(){}));case 2:return e.abrupt("return",t/1e4);case 3:case"end":return e.stop()}})},getUnclaimed:function(){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(rewardpoolContract.methods.getUnclaimedMDC(walletAddress).call().then(function(r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:t=r;case 1:case"end":return e.stop()}})}).catch(function(){}));case 2:return e.abrupt("return",web3.utils.fromWei(t,"ether"));case 3:case"end":return e.stop()}})},claimReward:function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(crewContract.methods.claimReward().send({from:r}).then(function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:t=!0;case 1:case"end":return e.stop()}})}).catch(function(){t=!1}));case 2:return e.abrupt("return",t);case 3:case"end":return e.stop()}})}}},_default=Wallet;exports.default=Wallet;